
# Copyright 2024 The Tongsuo Project Authors. All Rights Reserved.
#
# Licensed under the Apache License 2.0 (the "License").  You may not use
# this file except in compliance with the License.  You can obtain a copy
# in the file LICENSE in the source distribution or at
# https://github.com/Tongsuo-Project/Tongsuo/blob/master/LICENSE.txt

name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: The version to build

env:
  TONGSUO_VERSION: 8.4-stable

jobs:
  clone_tongsuo:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Tongsuo repo
        uses: actions/checkout@v4
        with:
          repository: Tongsuo-Project/Tongsuo
          ref: ${{ env.TONGSUO_VERSION }}
          path: Tongsuo

      - name: Archive Tongsuo source
        uses: actions/upload-artifact@v4
        with:
          name: tongsuo-src
          path: ${{ github.workspace }}/Tongsuo

  build-with-tongsuo-static:
    needs: clone_tongsuo
    strategy:
      fail-fast: false
      matrix:
        platform: [
          {
            os: ubuntu-24.04-arm,
            target: linux-arm64
          }
        ]
    runs-on: ${{ matrix.platform.os }}
    timeout-minutes: 30
    steps:
      - name: Set up JDK 11 for toolchains
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Set runner-specific environment variables
        shell: bash
        run: |
          echo "TONGSUO_HOME=${{ runner.temp }}/tongsuo" >> $GITHUB_ENV

      - uses: actions/checkout@v4

      - name: Fetch Tongsuo source
        run: gh run download --name tongsuo-src --dir ${{ github.workspace }}/Tongsuo
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Build Tongsuo on Linux or macOS
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          pushd ${{ github.workspace }}/Tongsuo
          perl ./config --banner=Configured ${{ matrix.platform.target }} --prefix=$TONGSUO_HOME --libdir=$TONGSUO_HOME/lib enable-weak-ssl-ciphers enable-ntls no-shared \
                --strict-warnings --release -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong
          make -s -j4
          make install
          popd

      - uses: ilammy/msvc-dev-cmd@v1
        if: runner.os == 'Windows'
      - uses: ilammy/setup-nasm@v1
        if: runner.os == 'Windows'
      - uses: shogo82148/actions-setup-perl@v1
        if: runner.os == 'Windows'

      - name: Build Tongsuo on Windows
        if: runner.os == 'Windows'
        run: |
          cd ${{ github.workspace }}\Tongsuo
          perl .\Configure --banner=Configured ${{ matrix.platform.target }} --prefix=$Env:TONGSUO_HOME no-capieng no-makedepend enable-weak-ssl-ciphers enable-ntls no-shared --release
          nmake /S
          nmake install
          Get-ChildItem -Force -LiteralPath $Env:TONGSUO_HOME\lib

      - name: Build with Gradle
        shell: bash
        run: |
          ./gradlew assemble -PcheckErrorQueue

      - name: Test with Gradle
        shell: bash
        run: ./gradlew test -PcheckErrorQueue

      - name: Other checks with Gradle
        shell: bash
        run: ./gradlew check -PcheckErrorQueue

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          draft: true
          prerelease: true
          fail_on_unmatched_files: true
          files: openjdk/build/libs/tongsuo-openjdk-${{ github.event.inputs.version }}-*.jar

  build-with-tongsuo-dynamic:
    needs: clone_tongsuo
    strategy:
      fail-fast: false
      matrix:
        platform: [
          {
            os: ubuntu-24.04-arm,
            target: linux-arm64
          }
        ]
    runs-on: ${{ matrix.platform.os }}
    timeout-minutes: 30
    steps:
      - name: Set up JDK 11 for toolchains
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Set runner-specific environment variables
        shell: bash
        run: |
          echo "TONGSUO_HOME=${{ runner.temp }}/tongsuo" >> $GITHUB_ENV

      - name: Set runner-specific environment variables for macOS
        shell: bash
        if: runner.os == 'macOS'
        run: |
          echo "TONGSUO_HOME=/opt/tongsuo" >> $GITHUB_ENV

      - uses: actions/checkout@v4

      - name: Fetch Tongsuo source
        run: gh run download --name tongsuo-src --dir ${{ github.workspace }}/Tongsuo
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Build Tongsuo on Linux or macOS
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          pushd ${{ github.workspace }}/Tongsuo
          perl ./config --banner=Configured ${{ matrix.platform.target }} --prefix=$TONGSUO_HOME --libdir=$TONGSUO_HOME/lib enable-weak-ssl-ciphers enable-ntls \
                --strict-warnings --release
          make -s -j4
          sudo make install
          popd

      - uses: ilammy/msvc-dev-cmd@v1
        if: runner.os == 'Windows'
      - uses: ilammy/setup-nasm@v1
        if: runner.os == 'Windows'
      - uses: shogo82148/actions-setup-perl@v1
        if: runner.os == 'Windows'

      - name: Build Tongsuo on Windows
        if: runner.os == 'Windows'
        run: |
          cd ${{ github.workspace }}\Tongsuo
          perl .\Configure --banner=Configured ${{ matrix.platform.target }} --prefix=$Env:TONGSUO_HOME no-capieng no-makedepend enable-weak-ssl-ciphers enable-ntls --release
          nmake /S
          nmake install
          Get-ChildItem -Force -LiteralPath $Env:TONGSUO_HOME\lib

      - name: Copy tongsuo dynamic library to overwrite the system's library
        if: runner.os == 'Windows'
        run: |
          $pathArray = $env:PATH -split ';'

          foreach ($path in $pathArray) {
            if (Test-Path -Path $path -PathType Container) {
              $files = Get-ChildItem -Path $path -File
              foreach ($file in $files) {
                if ($file.Name -like '*libcrypto*') {
                  Write-Host $path
                  Copy-Item -Path "$Env:TONGSUO_HOME\bin\*.dll" -Destination $path -Force
                  break
                }
              }
            }
          }

      - name: Set PATH for runtime library search
        shell: perl {0}
        if: runner.os == 'Windows'
        run: |
          use Actions::Core;
          add_path("$ENV{RUNNER_TEMP}\\tongsuo\\bin");
          add_path("$ENV{RUNNER_TEMP}\\tongsuo\\lib");

      - name: Build with Gradle
        shell: bash
        run: |
          ./gradlew assemble -PcheckErrorQueue -PtongsuoDynamic=1

      - name: Test with Gradle on Windows or macOS
        if: runner.os == 'Windows' || runner.os == 'macOS'
        shell: bash
        run: ./gradlew test -PcheckErrorQueue -PtongsuoDynamic=1

      - name: Test with Gradle on Linux
        if: runner.os == 'Linux'
        shell: bash
        run: LD_LIBRARY_PATH=$TONGSUO_HOME/lib:$LD_LIBRARY_PATH ./gradlew test -PcheckErrorQueue -PtongsuoDynamic=1

      - name: Other checks with Gradle on Windows or macOS
        if: runner.os == 'Windows' || runner.os =='macOS'
        shell: bash
        run: ./gradlew check -PcheckErrorQueue -PtongsuoDynamic=1

      - name: Other checks with Gradle on Linux
        if: runner.os == 'Linux'
        shell: bash
        run: LD_LIBRARY_PATH=$TONGSUO_HOME/lib:$LD_LIBRARY_PATH ./gradlew check -PcheckErrorQueue -PtongsuoDynamic=1

      - name: Rename to dynamic jar
        shell: bash
        run: |
          cd openjdk/build/libs/
          for file in tongsuo-openjdk-${{ github.event.inputs.version }}-*.jar; do
            os_arch_jar=$(echo "$file" | cut -d'-' -f4-)
            mv "$file" "tongsuo-openjdk-dynamic-${{ github.event.inputs.version }}-${os_arch_jar}"
          done

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.event.inputs.version }}
          tag_name: ${{ github.event.inputs.version }}
          draft: true
          prerelease: true
          fail_on_unmatched_files: true
          files: openjdk/build/libs/tongsuo-openjdk-dynamic-${{ github.event.inputs.version }}-*.jar
